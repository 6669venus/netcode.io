DONE

    Port across encryption manager above server.

    Port across tests for encryption manager.

TODO

    I'm halfway throught this, but it feels like I've hit a compiler bug. What's going on!?

    -----------------

    Integrate encryption manager into server

    Add an encryption mapping when a connection request is accepted.

    -----------------

    Extend challenge token to include user data.

    Update tests to insert random user data and check that it matches.

    -----------------

    Send connection challenge back to client when receiving a connection challenge.

    -----------------

    Port across context manager above server.

    Add tests for context manager    

    -----------------

    Implement code to process connection response packet from client and complete connection.

    -----------------

    Work out what I need in the struct allocated per-client slot.

    -----------------

    Work out what arrays I need for fast O(n) lookups for incoming packets (keep them separate). Hot/cold split.

    -----------------

    Get client connecting to server.

    -----------------

    Implement network simulator and shim for packets sent/received from client and server.

    -----------------

    Implement replay protection.

    -----------------

    Implement functional tests for client connect connection functionality.

    -----------------

    Bring across matcher in golang and port to binary format connect tokens.

    Integrate mbedtls library.

    Port across code for matcher. Keep it blocking. Doesn't matter for now.

    Convert client to get server info from web server.

    -----------------

    Implement stress that connects 256 clients.

    -----------------

    Write white paper.

    -----------------
