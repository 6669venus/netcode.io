DONE

TODO

    *** GO TO BED YOU MORON ***
    
    ------------------

    Set up array of client allowed packets for read.

    ------------------

    Make sure client sets current timestamp on read.

    ------------------

    Port across code on the client to receive packets from the client and process those packets.

    Make sure the process packet code is separate from the client receive packet loop, so it can be pumped from elsewhere (eg. packets coming in from simulator)

    -----------------

    Port across the code to process client packets.

    -----------------

    Make sure the client has all the logic necessary to progress to connected state.

    -----------------

    Implement the server side of the state machine (up to 256 players, for agar.io)

    -----------------

    Get client connecting to server.

    -----------------

    Bring across matcher in golang and port to binary format connect tokens.

    -----------------

    Integrate mbedtls library.

    -----------------

    Port across code for matcher. Keep it blocking. Doesn't matter for now.

    -----------------

    Convert client to get server info from web server.

    -----------------

    Implement stress that connects 256 clients.

    -----------------

    Implement network simulator and shim for packets sent/received from client and server.

    -----------------

    Implement functional tests for client connect connection functionality.

    -----------------

    Write white paper.

    -----------------
