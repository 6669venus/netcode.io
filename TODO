DONE

    Sketched out packets.

    Sketched out basic interface for reading and writing packets.

    This is going to work out pretty well.

TODO

    Extend code to take pointer to pointer for write bytes, so pointer can be advanced as writing is done.

    Network order is little endian, so need converter functions.

    Implement helper functions to write uint8, uint16, uint32, uint64.

    -----------------

    Implement functions to read and write packets in wire format, try to do it all (encryption included), in one pass.

    So functions for all encrypted packets will need the key and nonce passed in (sequence).

    Connection request packet should have prefix byte of 0? Known prefix.

    Prefix byte should be redesigned around # of digits of sequence, rather than so there are bits in the prefix byte available for expansion.

    In the end should have function to read packets, and a function to write each packet type.

    This would be convenient on read as well, so packets can uniformly be put in a buffer w. type and have type determined later (recv queue).
