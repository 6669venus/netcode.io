DONE

    Sketched out packets.

    Sketched out basic interface for reading and writing packets.

    This is going to work out pretty well.

    Extend code to take pointer to pointer for write bytes, so pointer can be advanced as writing is done.

    Implement helper functions to write uint8, uint16, uint32, uint64, bytes.

    Implement helper functions to read uint8, uint16 etc.

    Implement packet read function for connection request packet.

TODO

    Write a test that verifies that we can write a connection request packet and then read it back in.

    Note that on read, the connection request packet should be decrypted w. private key. This allows quick reject for invalid and expired connection reject packets.

    -----------------

    Implement read write for one of the other packet types.

    This involves designing the prefix byte, sequence # compression and encrypted data.

    The reader should perform decryption in place, so no allocation is made for a packet that doesn't pass the test. Quick reject is key.

    Once one encrypted packet type is tested working, implement the rest, adding tests for each packet type to make sure they are read/written correctly.

    -----------------
