DONE

    Port across network simulator.

    Ported across data structure and clear/free functions for simulator.

    Wrapped the simulator with code so it is only compiled in when tests are enabled (it's not a real part of the implementation).

    Port across rest of network simulator.

    Port across the receive packet from address.

    Port across discard packets, discard packets from address functions.

    Find a way to shim packets between client and server through the network simulator instead of sockets.

    I'm not sure the best way to do this...

    Requirements, I don't want to actually create a socket for a server created with a simulator, because that socket is not used, and may break automated tests (like travis...)

    So it seems that I have to create an internal function to create a client and server, one that has a flag that determines whether or not to create a socket.

    Then I can extend the client and server to redirect their socket send/recv to go through a simulator pointer passed to it.

    Effectively, the simulator passed in should override the creation of sockets...

    This will be somewhat tricky because I want the simulator class to only exist if NETCODE_ENABLE_TESTS 1.

    Thinking through. I reckon I just have to get it working first, then worry about how to cut it down when tests are off second.

    Yes. Confirmed. Get it working first, then work out how to elegantly disable the simulator related functionality if test is off.

    Sketched out internal client init with optional simulator. Added network simulator to client.

    Next step, update all parts of code that interact with the socket to have a preference to use the simulator, if it's set instead.

    Implement code for the client to receive packets from simulator.

    Implement code for the client to send packets via the simulator.

TODO

    Setup internal server create function w. network simulator passed in.

    Setup server to write packets via simulator.

    Setup server to read packets via simulator.

    -----------------

    Port across functional tests for client connect connection functionality.

    It's important that the implementation is fully tested before I write the write paper, in case there are errors!

    -----------------

    Write white paper for patent.

    -----------------

    Integrate mbedtls and update client to get connect token from matcher.

    -----------------

    Write secure dedicated servers article (probably derived from white paper? Perhaps it's the same thing?)

    -----------------

    Write post announcing netcode.io and queue it up at GDC 2017.

    -----------------

    Finish porting rest of gafferongames.com to the new hugo website.

    -----------------

    GDC 2017

    -----------------
