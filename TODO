DONE

    Added none type for address (0), so an address memset to 0 will be none by default.

TODO

    For generality, the connection denied packet should have a reason. 

    Even if there is only one reason right now, in the future, their might be more. Be flexible.
    
    ------------------

    Biggest things that need to be done for client:

        0. actually generate and send "connection request packets" to the server, while in the connection request state

        1. work out how packets will be sent to the server, and how this will be mocked for testing purposes (eg. through a loopback or simulator, without all the complexity of 'transport' concept)

        2. port across the code to process packets and comment most bits out

        3. get the actual connect working from real data (eg. a connect token + associated data... big sink hole here)

    I feel that the client is starting to get complex, although this is a reference implementation it needs to be:

        a) testable

        b) readable

    This is not write only code.

    Make sure the code that is written is as simple as possible, and readable. It's starting to jump around a bit with the literal porting from C++. Think if this can be simplified in some way.

    -----------------

    Specifically, the setting client state in one place is important for logging so do that. I need this printed out.

    -----------------

    Implement the server side of the state machine (up to 256 players, for agar.io)

    -----------------

    Implement tests to make sure the client/server state machine is working as expected.

    -----------------

    Bring across matcher in golang and port to binary format connect tokens.

    Integrate mbedtls library.

    -----------------

    Bring across a netcode_socket_t

    Implement just enough to get my shit done.

    Probably need more address functionality to interface with sockets sendto/recvfrom as well.

    -----------------

    Implement standalone server on localhost port 40000.

    -----------------

    Port across code for matcher. Keep it blocking. Doesn't matter for now.

    -----------------

    Implement client that connects to matcher, gets connect token and connects to server.

    Implement stress that connects 256 clients.

    -----------------

    Write white paper.

    -----------------
